{
  "name": "Image-crop",
  "tagline": "A lightweight vanilla js image cropper, with zero dependency requirements",
  "body": "# Lightweight Javascript ImageCropper\r\n\r\n[![Build Status](https://travis-ci.org/peterver/image-crop.svg?branch=master)](https://travis-ci.org/peterver/image-crop)\r\n[![npm](https://img.shields.io/npm/v/image_cropper.svg)](https://www.npmjs.com/package/image_cropper)\r\n[![npm](https://img.shields.io/npm/dt/image_cropper.svg?maxAge=2592000)]()\r\n[![npm](https://img.shields.io/npm/l/image_cropper.svg?maxAge=2592000)]()\r\n<a target=\"_blank\" href=\"https://www.paypal.me/peterver\"><img src=\"https://img.shields.io/badge/PayPal-Donate-blue.svg?style=flat\" title=\"Buy me a beer\" alt=\"Buy me a beer\"/></a>\r\n[![David](https://img.shields.io/david/peterver/image-crop.svg?maxAge=2592000)]()\r\n\r\nA lightweight javascript imagecropper written in vanilla js\r\nwith zero-dependency injection that builds itself into an object.\r\n\r\n# Getting Started\r\n\r\n```javascript\r\nvar img_c = new ImageCropper(selector, image, options);\r\n```\r\n\r\n### selector\r\nThe selector is an html5 css selector ( such as '#myTestDiv' ), basically anything that works with a querySelector does the job.\r\n\r\nIt should point to the element where you want the imagecropper to be located.\r\n\r\n### image\r\nThe image can either be a javascript Image object loaded through a FileReader, this can be done like so\r\n```javascript\r\nvar reader = new FileReader();\r\n\r\nreader.onload = function (evt) {\r\n  var img_c = new ImageCropper(..., evt.target.result, ...);\r\n};\r\n\r\nreader.readAsDataURL(...myfile...);\r\n```\r\n\r\nOr you can simply pass an existing url, for example \r\n\r\n```javascript\r\nvar img_c = new ImageCropper(..., '../assets/my_img.jpg', ...);\r\n```\r\n\r\n### options\r\nThere are several possible options defined for the image cropper \r\n\r\n* **max_width**<br>\r\n  Sets the maximum width that the imagecropper can become<br><br>\r\n* **max_height**<br>\r\n  Sets the maximum height for the imagecropper<br><br>\r\n* **min_crop_width**<br>\r\n  The minimum width that the cropped image can be<br><br>\r\n* **min_crop_height**<br>\r\n  The miminum height that the cropped image can be<br><br>\r\n* **create_cb**<br>\r\n  A callback function that is called when the imagecropper has finished creating, this will pass an object containing the dimensions of the imagecropper ( for styling or positioning purposes )<br><br>\r\n* **update_cb**<br>\r\n Callback function that is called everytime a move/change happens<br><br>\r\n* **destroy_cb**<br>\r\n  A callback function that is called when the imagecropper has finished destroying itself<br><br>\r\n* **fixed_size**<br>\r\n  A boolean ( true | false ), that tells the image cropper if it should constrain the size of the cropped area to be fixed or not ?<br><br>\r\n* **mode** (default = 'square')<br>\r\n  Sets the type of preview you should see when using the image cropper, possible options are\r\n  * _'square'_\r\n  * _'circular'_\r\n\r\n# Cropping an image (mime_type, quality)\r\nWhen you're all done with your changes, you can crop the image by calling the **crop** function.\r\n\r\nThis will return a base64 string that you can then do some funky stuff with.\r\n\r\n```javascript\r\nvar img_b64_str = img_c.crop(mime_type, quality);\r\n... // do some funky stuff here\r\n```\r\n\r\n### mime_type ( default = 'image/jpeg')\r\nThe following mime_types are currently supported in this build, they need to be passed as a string value.\r\n* image/jpeg\r\n* image/png\r\n\r\n### Quality\r\nThe quality is a numeric value between 0 and 1. Where 1 is the highest quality setting, and 0 is the lowest quality setting. \r\n\r\n# Cleaning up an imagecropper instance\r\n\r\n```javascript\r\nimg_c = new ImageCropper('#test-imagecrop', 'img.jpg');\r\nimg_c.destroy();\r\n```\r\n\r\nor you can just delete the dom node that the image cropper was created in ( or its parent ),\r\nand the imagecropper instance will destroy itself :]\r\n\r\n# Example\r\nFor an example, check out the example folder in the repository\r\n\r\n# Author\r\nPeter Vermeulen\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}